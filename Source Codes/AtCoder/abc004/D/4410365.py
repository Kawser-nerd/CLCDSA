# coding: utf-8
# from functools import lru_cache

# p: ?????????
# m: ???????
# p ???????????????
# R,G,B???????????r,g,b???????
# ??????? R(400), G(500), B(600) ????
# @lru_cache(maxsize = None)
def ops(p, m):
    if m <= r:          # R
        op = 400 - p
    elif m <= r + g:    # G
        op = 500 - p
    else:               # B
        op = 600 - p
    return(abs(op))

# 1 <= r, g, b <= 300
r,g,b = map(int, input().rstrip().split())
# marble total num
mnum = r + g + b
# DP???? dp[m]
#   m: ??????? 1 ? mnum
#   ?????????????????????????m????????
#   ????????????????????
dp = [float('inf') for x in range(mnum + 1)]
# ??????0????0
dp[0] = 0
# ?????G?????Box?500?????
# ????? 0 ? 1001 ??????
for i in range(1002): # ?????????
    tmp_dp = list(dp)
    for j in range(1, mnum + 1): # ????
        # ops(i, j): j???i?????????????
        # dp[j]: j??? i ??????????????????
        # dp[j - 1]: j - 1????????
        # j???i???????????i???????????????
        # ?????dp[j]??????
        op = ops(i, j) + dp[j - 1]
        if op < dp[j]:
            tmp_dp[j] = op
    dp = tmp_dp
print(dp[-1])