package jam;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Consonant
{
	public static void main(String[] args) throws Exception
	{
		BufferedReader br = new BufferedReader(new FileReader("/Users/anderson/Downloads/A-small-attempt0.in"));
		
		int numCases = Integer.parseInt(br.readLine());
		long[] results = new long[numCases]; 

		for (int i=0; i<numCases; i++)
		{
			String[] blah = br.readLine().split(" ");
			String name = blah[0];
			int n = Integer.parseInt(blah[1]);
			long score = 0;
			
			int length = name.length();
			boolean[] isConsecutive = new boolean[length]; //isConsecutive[i] = true if n characters starting at i are consonants
			for (int j=0; j<=length-n; j++)
			{
				boolean flag = true;
				for (int k=0; k<n; k++)
				{
					char letter = name.charAt(j+k);
					if (letter=='a' || letter=='e' || letter=='i' || letter=='o' || letter=='u')
					{
						flag = false;
						break;
					}
				}
				isConsecutive[j] = flag;
			}
			
			int currentStart = 0;
			int nextConsecutive = -1;
			while (true)
			{
				boolean foundNext = false;
				for (int j=currentStart; j<isConsecutive.length; j++) //fix this
				{
					if (isConsecutive[j])
					{
						nextConsecutive = j;
						foundNext = true;
						break;
					}
				}
				
				if (!foundNext)
					break;
				
				score += ((long)nextConsecutive-currentStart+1)*((long)length-nextConsecutive-n+1);
				currentStart = nextConsecutive+1;
			}
			
			results[i] = score;
		}
		br.close();
		BufferedWriter bw = new BufferedWriter(new FileWriter("/Users/anderson/Downloads/consonantsol.txt"));
		for (int i=0; i<results.length; i++)
		{
			bw.write("Case #"+(i+1)+": "+results[i]+"\n");
		}
		bw.close();
		

	}
}
