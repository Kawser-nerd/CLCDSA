#!/usr/bin/env python3
import sys


def solve(N: int, K: int, h: "List[int]"):
    minDiff = 10 ** 18
    for i in range(N - K + 1):
        minDiff = min(minDiff,h[i+K - 1] - h[i])
    print(minDiff)
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    q = []
    for i in range(N):
        q.append(int(next(tokens)))
    q.sort()
    solve(N, K, q)

if __name__ == '__main__':
    main()