def d_LCMrush(N, K):
    MOD = 10**9 + 7
    # ???divisor?K???????????
    tmp = []
    i = 1
    while i**2 <= K:
        if K % i == 0:
            tmp.append(i)
            tmp.append(K // i)
        i += 1
    divisor = sorted(list(set(tmp)), reverse=True)

    """
    GCD?N????????????????LCM(i,K)?????
    lcm_sum:
    GCD??????????(i,K)?????LCM(i,K)?????
    GCD????????????????????????????
    """
    lcm_sum = [0 for _ in range(len(divisor))]
    multiply = [0 for _ in range(len(divisor))]
    ans = 0
    for i in range(len(divisor)):
        """?????????????????????N????"""
        # ???????N?????????????????
        time = N // divisor[i]
        # ??????????????????????
        multiply[i] = divisor[i] * time * (time + 1) // 2
        # ??????????????????????????????????????
        for j in range(i):
            if divisor[j] % divisor[i] == 0:
                """
                ???????????divisor[j]?divisor[i]???
                ???????????????2?????????????
                ?????????????MOD??????
                """
                multiply[i] = (multiply[i] + MOD - multiply[j]) % MOD
        lcm_sum[i] = (multiply[i] * K // divisor[i]) % MOD

    ans = sum(lcm_sum) % MOD
    return ans

N,K = [int(i) for i in input().split()]
print(d_LCMrush(N, K))