/*
 * x ??? N ??????????? ? i ???? xi ????? ??? i ?????xi ? 0 ?? 10^9 ???????? ????????????????????????
 * 
 * ??????????????? M ???????? ???? i ?????? (Li,Ri,Di) ??????????? 
 * ??????? Ri ?? Li ????? Di ????????? ?????xRi?xLi=Di ?????????????
 * 
 * ??? M ?????????????????????????????????? ????? M ??????????????????? (x1,x2,…,xN) ??????????????????
 */

import java.util.*;
	public class Main{
		//????????????????????????
		static int[] belongs = null;
		//????????states
		static int[] states = null;
        
		public static void main(String[] args){
            Scanner sc = new Scanner(System.in);
            //??
            int n = Integer.parseInt(sc.next());
            int m = Integer.parseInt(sc.next());
            states = new int[n];
            belongs = new int[n];
            
            //???0?????i??????
            for(int i=0; i<n; i++){
            	belongs[i] = i;
            	states[i] = 0;
            }
            
            for(int i=0; i<m; i++){
            	int l = Integer.parseInt(sc.next())-1;
            	int r = Integer.parseInt(sc.next())-1;
            	int d = Integer.parseInt(sc.next());
            	//merge???????????
            	if(!merge(l, r, d)){
            		System.out.println("No");
            		sc.close();
            		return;
            	}
            }
            System.out.println("Yes");
            sc.close();
		}
        
		//a???????????updateBelongs?????????????states??????
		public static int updateBelongs(int a){
			if(a == belongs[a]){
				return a;
			}else{
				int temp = belongs[a];
				belongs[a] = updateBelongs(belongs[a]);
				//???????????????states[temp] = 0
				states[a] += states[temp];
				return belongs[a];
			}
		}
		
		//?????????????????????merge
		public static boolean merge(int l, int r, int d){
			int lb = updateBelongs(l);
			int rb = updateBelongs(r);
			
			//?????????????????????
            if(lb == rb){
            	return states[r] == states[l] + d;
            }else{
            	//??????????????????????????????
            	belongs[rb] = lb;
            	states[rb] = states[l] + d - states[r];
            	return true;
            }
        }
    }