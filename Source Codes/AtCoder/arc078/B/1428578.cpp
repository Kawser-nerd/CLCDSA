/*
doge
???????????????????
??????????????????????????
??????????????????????????
??????????????????????????
??????????????????????????
??????????????????????????
???????????????????????????
???????????????????????????
????????????????????????????
????????????????????????????
???????????????????????????
*/
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <cassert>
#include <iomanip>
#include <random>

using namespace std;

#define ll long long
#define ld long double
#define null NULL


int s[100100], p[100100];

vector<int> g[100100];


void dfs(int v, int par = 1) {
	s[v] = 1;
	p[v] = par;
	for (int u : g[v]) {
		if (u == par) continue;
		dfs(u, v);
		s[v] += s[u];
	}
}


signed main() {
	int n;
	scanf("%d", &n);
	for (int edge = 0; edge < n - 1; ++edge) {
		int u, v;
		scanf("%d %d", &u, &v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	dfs(1);
	int _v = n;
	int cnt = 0;
	while (_v != 1) {
		++cnt;
		_v = p[_v];
	}
	cnt = (cnt - 1) / 2;
	int v = n;
	for (int i = 0; i < cnt; ++i) {
		v = p[v];
	}
	int s1 = s[v], s2 = n - s[v];
	if (s1 >= s2) {
		puts("Snuke");
	} else {
		puts("Fennec");
	}
    return 0;
}