import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int memberCnt = sc.nextInt();
		int relatedCnt = sc.nextInt();

		// map
		HashMap<Integer, ArrayList<Integer>> relations = new HashMap<Integer, ArrayList<Integer>>();

		for (int i = 0; i < relatedCnt; i++) {
			int oneSelf = sc.nextInt();
			int pair = sc.nextInt();

			ArrayList<Integer> friends = new ArrayList<Integer>();
			// ??map?????????
			if (relations.containsKey(oneSelf)) {
				// ????map?value?????
				friends = relations.get(oneSelf);
			}
			// ??????????
			friends.add(pair);
			// map?????
			relations.put(oneSelf, friends);
		}

		// ?????????????1????
		int max = 1;
		// ?????????????????????????????
		for (int n = 1; n <= memberCnt; n++) {
			if (relations.containsKey(n)) {
				// max????????max??????????????????
				max = Math.max(max, 1 + getMaxRelations(relations, relations.get(n)));
			}
		}
		System.out.println(max);
		sc.close();
	}

	// ?????????-1??????????????
	// ???map,map?value?????
	public static int getMaxRelations(HashMap<Integer, ArrayList<Integer>> relations, ArrayList<Integer> friends) {
		int max = 1;
		
		// map?value?????????
		for (int data : friends) {
			
			// map?data?key???????
			if (relations.containsKey(data)) {
				ArrayList<Integer> list = new ArrayList<Integer>();
				// data?key????????
				for (int temp : relations.get(data)) {
					// map?value??????????????????????????????????????
					if (friends.contains(temp)) {
						list.add(temp);
					}
				}

				// ???????????????????????
				if (list.size() != 0) {
					max = Math.max(max, 1 + getMaxRelations(relations, list));
				}
			}
		}
		return max;
	}
}