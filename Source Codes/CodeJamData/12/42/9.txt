using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace round2
{
    public class ProblemB
    {
        public static void Run(string infile, string outfile)
        {
            using (System.IO.StreamReader sr = System.IO.File.OpenText(infile))
            {
                using (System.IO.StreamWriter sw = System.IO.File.CreateText(outfile))
                {
                    int T = int.Parse(sr.ReadLine());

                    for (int t = 1; t <= T; t++)
                    {
                        string s = sr.ReadLine();
                        string[] ss = s.Split(' ');

                        int N = int.Parse(ss[0]);
                        int W = int.Parse(ss[1]);
                        int L = int.Parse(ss[2]);

                        int[] r = new int[N];

                        int[] x = new int[N];
                        int[] y = new int[N];

                        s = sr.ReadLine();
                        ss = s.Split(' ');

                        for (int i = 0; i < N; i++) r[i] = int.Parse(ss[i]);

                        int[] nr = new int[N];
                        for (int i = 0; i < N; i++) nr[i] = i;

                        for (int i = 0; i < N - 1; i++)
                            for (int j = i + 1; j < N; j++)
                                if (r[nr[i]] < r[nr[j]])
                                {
                                    int temp = nr[j];
                                    nr[j] = nr[i];
                                    nr[i] = temp;
                                }

                        int n = 0, cx = 0, cy = 0;

                        x[nr[n]] = cx;
                        y[nr[n]] = cy;

                        while (n + 1 < N && cy + r[nr[n]] + r[nr[n + 1]] <= L)
                        {
                            cy += r[nr[n]] + r[nr[n + 1]];
                            n++;
                            x[nr[n]] = cx;
                            y[nr[n]] = cy;
                        }

                        if (n + 1 < N)
                        {
                            cx = W;
                            cy = 0;
                            n++;

                            x[nr[n]] = cx;
                            y[nr[n]] = cy;

                            while (n + 1 < N && cy + r[nr[n]] + r[nr[n + 1]] <= L)
                            {
                                cy += r[nr[n]] + r[nr[n + 1]];
                                n++;
                                x[nr[n]] = cx;
                                y[nr[n]] = cy;
                            }
                        }

                        int cr = r[nr[0]];
                        cx = 0;

                        while (n + 1 < N)
                        {
                            n++;
                            cx += cr + r[nr[n]];
                            cy = 0;
                            x[nr[n]] = cx;
                            y[nr[n]] = cy;
                            cr = r[nr[n]];

                            while (n + 1 < N && cy + r[nr[n]] + r[nr[n + 1]] <= L)
                            {
                                cy += r[nr[n]] + r[nr[n + 1]];
                                n++;
                                x[nr[n]] = cx;
                                y[nr[n]] = cy;
                            }
                        }

                        StringBuilder sb = new StringBuilder();
                        for (int i = 0; i < N; i++) sb.AppendFormat("{0} {1} ", x[i], y[i]);

                        sw.WriteLine(string.Format("Case #{0}: {1}", t, sb.ToString().Trim()));
                    }
                }
            }
        }
    }
}
