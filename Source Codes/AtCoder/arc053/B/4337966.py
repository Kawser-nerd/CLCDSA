def b_splited_palindrome(S):
    """
    ?????????????S???????????????S'????
    ??S'????????????????????????????????????
    ???????????????????????????????????????
    """

    # ???S????N, ???S????????????K??????????
    # N if K == 0 else 2*((N-K)//(2*K)) + 1

    # K=0???????????????????????????????????
    # N/2 ???????????????????1?????????

    # K=1??????????????????????????????????
    # 1?????????

    # K=2???????2????????????????????????2???
    # ?????????????????????????N-2????????????
    # ?????????????????????????(N-2)/2?????
    # ?????????????????????????????????????????
    # ??????????????(N-1)//4?????????????2*((N-1)//4) + 1.

    # ???K>=1?????????????????????????
    from collections import Counter
    num_charactor_appeared = Counter(S)
    num_appeared_odd_time = len([1 for v in num_charactor_appeared.values() if v % 2 == 1])

    ans = len(S) if num_appeared_odd_time == 0 \
        else 2 * ((len(S) - num_appeared_odd_time) // (2 * num_appeared_odd_time)) + 1
    return ans

S = input()
print(b_splited_palindrome(S))