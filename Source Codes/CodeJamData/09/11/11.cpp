#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
using namespace std;

#define all(c) ((c).begin()), ((c).end()) 
#define iter(c) __typeof((c).begin())
#define present(c, e) ((c).find((e)) != (c).end()) 
#define cpresent(c, e) (find(all(c), (e)) != (c).end())
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define tr(c, i) for (iter(c) i = (c).begin(); i != (c).end(); ++i)
#define pb(e) push_back(e)
#define mp(a, b) make_pair(a, b)

typedef long long ll;

int readint() { 
  int i, j, s;
  while (!isdigit(i = getchar()) && i != '-');
  if (i == '-') { s = -1; j = 0; }
  else { s = 1; j = i - '0'; }
  while (isdigit(i = getchar())) j = ((j << 1) + (j << 3) + (i - '0'));
  return j * s;
}

ll doit(ll n, int b) {
  ll r = 0;
  while (n > 0) {
    r += (n % b) * (n % b);
    n /= b;
  }
  return r;
}


bool ishappy(ll n, int b) {
  set<ll> vis;
  while (n != 1) {
    if (vis.count(n)) return false;
    vis.insert(n);
    n = doit(n, b);
  }
  return true;
}

ll ans[] = {
2, 3, 3, 2, 2, 3, 3, 5, 5, 23, 23, 5, 5, 23, 23, 6, 6, 79, 79, 6, 6, 79, 79, 49, 49, 79, 79, 49, 49, 79, 79, 7, 7, 143, 143, 7, 7, 143, 143, 7, 7, 143, 143, 7, 7, 143, 143, 49, 49, 2207, 2207, 49, 49, 2207, 2207, 49, 49, 2207, 2207, 49, 49, 2207, 2207, 8, 8, 27, 27, 8, 8, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 216, 216, 3879, 3879, 216, 216, 3879, 3879, 1975, 1975, 3879, 3879, 1975, 1975, 3879, 3879, 1001, 1001, 5719, 5719, 1001, 1001, 5719, 5719, 1001, 1001, 5719, 5719, 1001, 1001, 5719, 5719, 47089, 47089, 47089, 47089, 47089, 47089, 47089, 47089, 48769, 48769, 58775, 58775, 48769, 48769, 58775, 58775, 3, 3, 3, 3, 3, 3, 3, 3, 27, 27, 27, 27, 27, 27, 27, 27, 415, 415, 707, 707, 415, 415, 707, 707, 415, 415, 1695, 1695, 415, 415, 1695, 1695, 125, 125, 143, 143, 125, 125, 143, 143, 125, 125, 143, 143, 125, 125, 143, 143, 2753, 2753, 37131, 37131, 2753, 2753, 37131, 37131, 37131, 37131, 37131, 37131, 37131, 37131, 37131, 37131, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 4977, 4977, 10089, 10089, 4977, 4977, 10089, 10089, 4977, 4977, 23117, 23117, 4977, 4977, 23117, 23117, 6393, 6393, 35785, 35785, 6393, 6393, 35785, 35785, 6393, 6393, 128821, 128821, 6393, 6393, 128821, 128821, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 569669, 7, 7, 13, 13, 7, 7, 13, 13, 7, 7, 23, 23, 7, 7, 23, 23, 44, 44, 79, 79, 44, 44, 79, 79, 49, 49, 79, 79, 49, 49, 79, 79, 7, 7, 167, 167, 7, 7, 167, 167, 7, 7, 7895, 7895, 7, 7, 7895, 7895, 49, 49, 6307, 6307, 49, 49, 6307, 6307, 49, 49, 7895, 7895, 49, 49, 7895, 7895, 97, 97, 219, 219, 97, 97, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 608, 608, 3879, 3879, 608, 608, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 3879, 34527, 34527, 48041, 48041, 34527, 34527, 48041, 48041, 34527, 34527, 120407, 120407, 34527, 34527, 120407, 120407, 245035, 245035, 697563, 697563, 245035, 245035, 697563, 697563, 245035, 245035, 2688153, 2688153, 245035, 245035, 2688153, 2688153, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 1033, 1033, 6073, 6073, 1033, 1033, 6073, 6073, 4577, 4577, 6073, 6073, 4577, 4577, 6073, 6073, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 29913, 29913, 120149, 120149, 29913, 29913, 120149, 120149, 71735, 71735, 613479, 613479, 71735, 71735, 613479, 613479, 218301, 218301, 711725, 711725, 218301, 218301, 711725, 711725, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 9867, 9867, 28099, 28099, 9867, 9867, 28099, 28099, 28099, 28099, 28099, 28099, 28099, 28099, 28099, 28099, 48041, 48041, 48041, 48041, 48041, 48041, 48041, 48041, 246297, 246297, 346719, 346719, 246297, 246297, 346719, 346719, 2662657, 2662657, 4817803, 4817803, 2662657, 2662657, 4817803, 4817803, 11814485, 11814485, 11814485, 11814485, 11814485, 11814485, 11814485, 11814485, 
};

int N, B[20];

int main() {
  /*
  rep (b, 1 << 9) {
    fprintf(stderr, "%d / %d\n", b, 1 << 9);
    if (b == 0) continue;

    N = 0;
    rep (i, 9) if ((b >> i) & 1) B[N++] = i + 2;

    for (ll i = 2; ; i++) {
      rep (j, N) if (!ishappy(i, B[j])) goto ng0;
      printf("%lld, ", i);
      break;
    ng0:;
    }
  }
  puts("");
  return 0;
  */

  int cases;
  scanf("%d", &cases);
  rep (ca, cases) {
    scanf(" ");
    char line[1024];
    gets(line);
    stringstream ss(line);
    int t, b = 0;
    while (ss >> t) b |= (1 << (t - 2));
    
    printf("Case #%d: %lld\n", ca + 1, ans[b - 1]);
  }
}
