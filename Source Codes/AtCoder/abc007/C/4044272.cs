using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main()
    {
        int[] cin = Console.ReadLine().Split().Select(i => int.Parse(i)).ToArray();
        int r = cin[0];
        int c = cin[1];
        cin = Console.ReadLine().Split().Select(i => int.Parse(i)).ToArray();
        int sy = cin[0];
        int sx = cin[1];
        cin = Console.ReadLine().Split().Select(i => int.Parse(i)).ToArray();
        int gy = cin[0];
        int gx = cin[1];
        // ?????????????????true???boolean??????(x,y)???
        var map = new bool[c + 1, r + 1];
        for (int i = 1; i < r + 1; i++)
        {
            string cin2 = Console.ReadLine();
            for (int j = 1; j < c + 1; j++)
            {
                if (cin2[j - 1] == '.') map[j, i] = true;
            }
        }

        // ?????????????????
        var que = new Queue<Point>();
        // ????????????step
        var step = new int[c + 1, r + 1];

        // ?????????????
        que.Enqueue(new Point { x = sx, y = sy });
        // ???????1?????????
        // ?????????0????????????step?????????
        // ???-1??????
        step[sx, sy] = 1;

        // ???????(?????bfs???????)
        int[] vx = { 0, 1, 0, -1 };
        int[] vy = { 1, 0, -1, 0 };

        // bfs??????????????????
        while (que.Count > 0)
        {
            // ????p?????
            var p = que.Dequeue();
            // ????????????????????
            if (p.x == gx && p.y == gy) break;
            // ????????????
            int now_step = step[p.x, p.y];
            // ????????????4?????
            for (int i = 0; i < 4; i++)
            {
                // ????np???
                var np = new Point();
                np.x += p.x + vx[i];
                np.y += p.y + vy[i];

                // ?????????????&????????????
                if (map[np.x, np.y] == true && step[np.x, np.y] == 0)
                {
                    // ??????????????
                    que.Enqueue(new Point { x = np.x, y = np.y });
                    // ???????????
                    step[np.x, np.y] = now_step + 1;
                    // View(step); // ????????????
                }
            }
        }

        Console.WriteLine(step[gx, gy] - 1);
    }

    // ????????????(?????????????)
    static void View(int[,] step)
    {
        Debug.Write("\n");
        for (int i = 1; i < step.GetLength(1); i++)
        {
            for (int j = 1; j < step.GetLength(0); j++)
            {
                Debug.Write(step[j, i] + "\t");
            }
            Debug.Write("\n");
        }
    }
}

// ??????
class Point
{
    public int x, y;
}