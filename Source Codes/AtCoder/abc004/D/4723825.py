r_num_marble, g_num_marble, b_num_marble = map(int,input().split())

# print(r, g, b)

# 40?
# def count(x):
#     if (x-1)%2 == 0:
#         c = (x-1)*(x+1)//4
#         return c
#     else:
#         c = x ** 2//4
#         return c

# print(count(r)+count(g)+count(b))

# ??????????????????????
# ????????????????n?????1, 2, 3, 4…??????????????
def func_move_cost(left_position, num_marble):
    # ???????????????????? 
    if left_position + num_marble <= 0:
        return (-left_position - left_position - num_marble + 1) * num_marble/2
    # ????????????????????
    elif left_position >= 0:
        return (left_position + left_position + num_marble - 1) * num_marble/2
    # ??????left_position???left_position+num_marble-1?????????
    else:
        return ((-left_position) + 1) * (-left_position)/2 + \
            (left_position + num_marble)*(left_position + num_marble -1)/2


# ????????????
answer = float('inf')
# ???????????????????n?????
# 1, 2, 3, 4…n???????????????????????????????
move_cost = 0

for g_left_position in range (-500, 500):
    move_cost = func_move_cost(g_left_position, g_num_marble)

    # red???g_left_position - r_num_marble ??????
    # -100 - r_num_marble/2 ?????????
    if g_left_position - r_num_marble < -100 - r_num_marble/2:
        move_cost += func_move_cost(g_left_position - r_num_marble + 100, r_num_marble)
    else:
        move_cost += func_move_cost(-(r_num_marble)/2, r_num_marble)
    
    # blue???g_left_position + g_num_marble ??????
    # 100 - b_num_marble/2?????????
    if g_left_position + g_num_marble > 100 - b_num_marble/2:
        move_cost += func_move_cost(g_left_position + g_num_marble-100, b_num_marble)
    else:
        move_cost += func_move_cost(-b_num_marble/2, b_num_marble)

    
    answer = min(answer, move_cost)

print(int(answer))